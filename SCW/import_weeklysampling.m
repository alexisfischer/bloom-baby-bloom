function [a] = import_weeklysampling()

% Import data from text file.
% Script for importing data from the following text file:
%
%    /Users/afischer/Documents/UCSC_research/SCW_classifier/Harmful Algal Blooms_2011-2018.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2018/04/16 11:44:31

%% Initialize variables.
filename = '/Users/afischer/Documents/UCSC_research/SCW_classifier/Harmful Algal Blooms_2011-2018.csv';
delimiter = ',';
startRow = 8;

%% Read columns of data as text:
% For more information, see the TEXTSCAN documentation.
formatSpec = '%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
textscan(fileID, '%[^\n\r]', startRow-1, 'WhiteSpace', '', 'ReturnOnError', false, 'EndOfLine', '\r\n');
dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'TextType', 'string', 'ReturnOnError', false);

%% Close the text file.
fclose(fileID);

%% Convert the contents of columns containing numeric text to numbers.
% Replace non-numeric text with NaN.
raw = repmat({''},length(dataArray{1}),length(dataArray)-1);
for col=1:length(dataArray)-1
    raw(1:length(dataArray{col}),col) = mat2cell(dataArray{col}, ones(length(dataArray{col}), 1));
end
numericData = NaN(size(dataArray{1},1),size(dataArray,2));

for col=[1,2,3,5,6,7,9,10,11,12,13,14,15,16,17,18]
    % Converts text in the input cell array to numbers. Replaced non-numeric
    % text with NaN.
    rawData = dataArray{col};
    for row=1:size(rawData, 1)
        % Create a regular expression to detect and remove non-numeric prefixes and
        % suffixes.
        regexstr = '(?<prefix>.*?)(?<numbers>([-]*(\d+[\,]*)+[\.]{0,1}\d*[eEdD]{0,1}[-+]*\d*[i]{0,1})|([-]*(\d+[\,]*)*[\.]{1,1}\d+[eEdD]{0,1}[-+]*\d*[i]{0,1}))(?<suffix>.*)';
        try
            result = regexp(rawData(row), regexstr, 'names');
            numbers = result.numbers;
            
            % Detected commas in non-thousand locations.
            invalidThousandsSeparator = false;
            if numbers.contains(',')
                thousandsRegExp = '^\d+?(\,\d{3})*\.{0,1}\d*$';
                if isempty(regexp(numbers, thousandsRegExp, 'once'))
                    numbers = NaN;
                    invalidThousandsSeparator = true;
                end
            end
            % Convert numeric text to numbers.
            if ~invalidThousandsSeparator
                numbers = textscan(char(strrep(numbers, ',', '')), '%f');
                numericData(row, col) = numbers{1};
                raw{row, col} = numbers{1};
            end
        catch
            raw{row, col} = rawData{row};
        end
    end
end

% Convert the contents of columns with dates to MATLAB datetimes using the
% specified date format.
try
    dates{4} = datetime(dataArray{4}, 'Format', 'HH:mm:ss', 'InputFormat', 'HH:mm:ss');
catch
    try
        % Handle dates surrounded by quotes
        dataArray{4} = cellfun(@(x) x(2:end-1), dataArray{4}, 'UniformOutput', false);
        dates{4} = datetime(dataArray{4}, 'Format', 'HH:mm:ss', 'InputFormat', 'HH:mm:ss');
    catch
        dates{4} = repmat(datetime([NaN NaN NaN]), size(dataArray{4}));
    end
end

dates = dates(:,4);

%% Split data into numeric and string columns.
rawNumericColumns = raw(:, [1,2,3,5,6,7,9,10,11,12,13,14,15,16,17,18]);
rawStringColumns = string(raw(:, 8));


%% Replace non-numeric cells with NaN
R = cellfun(@(x) ~isnumeric(x) && ~islogical(x),rawNumericColumns); % Find non-numeric cells
rawNumericColumns(R) = {NaN}; % Replace non-numeric cells

%% Make sure any text containing <undefined> is properly converted to an <undefined> categorical
idx = (rawStringColumns(:, 1) == "<undefined>");
rawStringColumns(idx, 1) = "";

%% Allocate imported array to column variable names
year = cell2mat(rawNumericColumns(:, 1));
month = cell2mat(rawNumericColumns(:, 2));
day = cell2mat(rawNumericColumns(:, 3));
%time = dates{:, 1};
%latitude = cell2mat(rawNumericColumns(:, 4));
%longitude = cell2mat(rawNumericColumns(:, 5));
%depthm = cell2mat(rawNumericColumns(:, 6));
%location = categorical(rawStringColumns(:, 1));
AlexandriumsppcellsL = cell2mat(rawNumericColumns(:, 7));
Chlorophyllmgm3 = cell2mat(rawNumericColumns(:, 8));
DAVolumeFilteredmL = cell2mat(rawNumericColumns(:, 9));
DinophysissppcellsL = cell2mat(rawNumericColumns(:, 10));
DomoicAcidngmL = cell2mat(rawNumericColumns(:, 11));
NitrateuM = cell2mat(rawNumericColumns(:, 12));
PhosphateuM = cell2mat(rawNumericColumns(:, 13));
PseudonitzschiaseriatagroupcellsL = cell2mat(rawNumericColumns(:, 14));
SilicateuM = cell2mat(rawNumericColumns(:, 15));
WaterTemperatureC = cell2mat(rawNumericColumns(:, 16));

dn=datenum(year,month,day);

a.dn=dn;
a.chl=Chlorophyllmgm3;
a.temp=WaterTemperatureC;
a.ALE=AlexandriumsppcellsL;
a.DIN=DinophysissppcellsL;
a.PSE=PseudonitzschiaseriatagroupcellsL;
a.NitrateuM=NitrateuM;
a.PhosphateuM=PhosphateuM;
a.SilicateuM=SilicateuM;
a.DomoicAcidngmL=DomoicAcidngmL;
a.DAVolumeFilteredmL=DAVolumeFilteredmL;

save('/Users/afischer/Documents/MATLAB/bloom-baby-bloom/SCW/Data/WeeklySampling_SCW','a');

%% Clear temporary variables
clearvars filename delimiter startRow formatSpec fileID dataArray ans raw col numericData rawData row regexstr result numbers invalidThousandsSeparator thousandsRegExp dates blankDates anyBlankDates invalidDates anyInvalidDates rawNumericColumns rawStringColumns R idx;